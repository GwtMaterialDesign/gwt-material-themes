/*
  This will hide the focus indicator if the element receives focus via the mouse,
  but it will still show up on keyboard focus.
*/
.js-focus-visible :focus:not(.focus-visible) {
  outline: none;
}

/** Tabs & Buttons Focusable **/
.button-collapse[tabindex],
i[tabindex],
button[tabindex],
.tabs .tab a[tabindex] {
  overflow: hidden;
  position: relative;
}

.button-collapse[tabindex]:before,
i[tabindex]:before,
.tabs .tab a[tabindex]:before,
button[tabindex]:before {
  content: "";
  position: absolute;
  background: rgba(0, 0, 0, 0.2);
  border-radius: 100% !important;
  width: 0px;
  height: 0px;
  top: 50%;
  left: 50%;
  -webkit-animation: breathing 1.5s ease-out infinite normal;
  animation: breathing 1.5s ease-out infinite normal;
  opacity: 0;
  transition: 400ms;
}

.button-collapse.focus-visible:before,
i.focus-visible:before,
button.focus-visible:before,
.tabs .tab a.focus-visible:before {
  opacity: 1;
  width: 100px;
  height: 100px;
  top: calc(50% - 50px);
  left: calc(50% - 50px);
}

button.btn-floating.focus-visible:before {
  width: 48px;
  height: 48px;
  top: calc(50% - 24px);
  left: calc(50% - 24px);
}

i.focus-visible:before {
  width: 32px;
  height: 32px;
  top: calc(50% - 17px);
  left: calc(50% - 16px);
}

.button-collapse.focus-visible:before,
nav .nav-wrapper i.focus-visible:before {
  width: 40px;
  height: 40px;
  top: calc(50% - 20px);
  left: calc(50% - 20px);
}

/** Checkbox Focusable */
.checkbox.gwt-CheckBox.focus-visible,
.checkbox.gwt-CheckBox:hover {
  position: relative;
}

.checkbox.gwt-CheckBox:after {
  opacity: 0;
  transition: 200ms;
  transform: scale(0);
  content: "";
  width: 36px;
  height: 36px;
  background: rgba(0, 0, 0, 0.1);
  position: absolute;
  left: -8px;
  top: -8px;
  border-radius: 100%;
  z-index: -1;
}

.checkbox.gwt-CheckBox.focus-visible:after,
.checkbox.gwt-CheckBox:hover:after {
  transform: scale(1);
  opacity: 1;
}

/** Radio Button Focusable **/
.gwt-RadioButton:not(.gwt-RadioButton-disabled).focus-visible label:before,
.gwt-RadioButton:not(.gwt-RadioButton-disabled):hover label:before {
  -webkit-box-shadow: 0 0 0 8px rgba(0, 0, 0, 0.1);
  box-shadow: 0 0 0 8px rgba(0, 0, 0, 0.1);
}

/** Switch Focusable **/
.switch.focus-visible input[type=checkbox]:checked:not(:disabled) ~ .lever:after {
  box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4), 0 0 0 15px $range-field-progress-ring-color;
}

.switch.focus-visible input[type=checkbox]:not(:disabled) ~ .lever:after {
  box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.4), 0 0 0 15px rgba(0, 0, 0, 0.08);
}

/** Range Focusable **/
input[type=range].focus-visible::-webkit-slider-thumb {
  -webkit-box-shadow: 0px 0px 0px 12px $range-field-progress-ring-color;
  -moz-box-shadow: 0px 0px 0px 12px $range-field-progress-ring-color;
  box-shadow: 0px 0px 0px 12px $range-field-progress-ring-color;
}

input[type=range].focus-visible::-moz-range-thumb {
  -webkit-box-shadow: 0px 0px 0px 12px $range-field-progress-ring-color;
  -moz-box-shadow: 0px 0px 0px 12px $range-field-progress-ring-color;
  box-shadow: 0px 0px 0px 12px $range-field-progress-ring-color;
}

input[type=range]:hover::-ms-thumb,
input[type=range].focus-visible::-ms-thumb {
  -webkit-box-shadow: none !important;
  -moz-box-shadow: none !important;
  box-shadow: none !important;
}

/** Breadcrumb Focusable **/
.breadcrumb.focus-visible i:only-child {
  border-bottom: 1px solid;
}

.breadcrumb.focus-visible span {
  border-bottom: 1px solid;
}

.chip.focus-visible {
  color: rgba(0, 0, 0, 0.6);
  background-color: #c8c8c8;
}

/** Side Focusable **/
.side-nav li a.focus-visible {
  background: #e9e9e9;
}

/** Collapsible Focusable **/
.collapsible-header:hover,
.collapsible-header.focus-visible {
  background-color: #eee;
}

/** Collection Focusable **/
.collection-item.focus-visible {
  background-color: #eee;
}